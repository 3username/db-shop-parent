<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.db.member.mapper.UserTokenMapper">
  <resultMap id="BaseResultMap" type="com.db.member.model.UserToken">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="login_type" jdbcType="VARCHAR" property="loginType" />
    <result column="device_infor" jdbcType="VARCHAR" property="deviceInfor" />
    <result column="is_availability" jdbcType="INTEGER" property="isAvailability" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="active" jdbcType="BIT" property="active" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, token, login_type, device_infor, is_availability, user_id, active, create_time,
    update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from meite_user_token
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from meite_user_token
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.db.member.model.UserToken">
    insert into meite_user_token (id, token, login_type,
      device_infor, is_availability, user_id,
      active, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{token,jdbcType=VARCHAR}, #{loginType,jdbcType=VARCHAR},
      #{deviceInfor,jdbcType=VARCHAR}, #{isAvailability,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT},
      #{active,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.db.member.model.UserToken">
    insert into meite_user_token
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="loginType != null">
        login_type,
      </if>
      <if test="deviceInfor != null">
        device_infor,
      </if>
      <if test="isAvailability != null">
        is_availability,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="active != null">
        active,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="loginType != null">
        #{loginType,jdbcType=VARCHAR},
      </if>
      <if test="deviceInfor != null">
        #{deviceInfor,jdbcType=VARCHAR},
      </if>
      <if test="isAvailability != null">
        #{isAvailability,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="active != null">
        #{active,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.db.member.model.UserToken">
    update meite_user_token
    <set>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="loginType != null">
        login_type = #{loginType,jdbcType=VARCHAR},
      </if>
      <if test="deviceInfor != null">
        device_infor = #{deviceInfor,jdbcType=VARCHAR},
      </if>
      <if test="isAvailability != null">
        is_availability = #{isAvailability,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="active != null">
        active = #{active,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.db.member.model.UserToken">
    update meite_user_token
    set token = #{token,jdbcType=VARCHAR},
      login_type = #{loginType,jdbcType=VARCHAR},
      device_infor = #{deviceInfor,jdbcType=VARCHAR},
      is_availability = #{isAvailability,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=BIGINT},
      active = #{active,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByUserIdAndLoginType" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from meite_user_token
    where user_id=#{userId} and login_type=#{loginType} and is_availability ='1'
  </select>

  <update id="updateTokenAvailability" parameterType="com.db.member.model.UserToken">
    update meite_user_token
    set
      is_availability = '0',
      update_time = now()
    where token = #{token,jdbcType=VARCHAR}
  </update>

  <insert id="insertUserToken" parameterType="com.db.member.model.UserToken">
    insert into meite_user_token (id, token, login_type,
      device_infor, is_availability, user_id,
      active, create_time, update_time
      )
    values (null, #{token,jdbcType=VARCHAR}, #{loginType,jdbcType=VARCHAR},
      #{deviceInfor,jdbcType=VARCHAR}, 1, #{userId,jdbcType=BIGINT},
      #{active,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
 </insert>

</mapper>


